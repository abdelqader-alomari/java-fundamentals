/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.*;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

    public static void main(String[] args) {
        int rollsNum = 4;
        int[] rolls = roll(rollsNum);
        containsDuplicates(rolls);
        average(rolls);

        int [][] weeklyMonthTemperatures = {
                {66,64,58,65,71,57,60},
                {57,65,65,70,72,65,51},
                {55,54,60,53,59,57,61},
                {65,56,55,52,55,62,57}
        };
        int[] array = lowestAverage(weeklyMonthTemperatures);
        System.out.println("The array with lowest average is: [");
        System.out.println(Arrays.toString(array));
    }
    public static int[] roll(int n){
        int[] rollArray = new int[n];
        int max = 6;
        int min = 1;
        for (int i = 0; i<n;i++){
            rollArray[i] = (int) Math.floor(Math.random() * (max - min + 1) + min);
            System.out.println(rollArray[i]);
        }
        return (rollArray);
    }

    public static boolean containsDuplicates(int[] rolls){
        HashMap<Integer,Integer> map = new HashMap<>();
        for (int i =0; i<rolls.length; i++){
            if (map.get(rolls[i])!=null){
                return true;
            } else{
                map.put(rolls[i], 1);
            }
        }
        System.out.println("false");
        return false;
    }
    public static double average(int[] rolls){
        double sum =0;
        for (int i =0; i<rolls.length;i++){
            sum= sum +rolls[i];
        }
        System.out.println(sum/rolls.length);
        return sum/rolls.length;
    }
    public static int[] lowestAverage(int[][] array){
        List<Double> averageCollection = new ArrayList<Double>();
        for(int i=0; i<array.length;i++){
            double sum=0;
            for(int j = 0 ; j<array[i].length;j++){
                sum+=array[i][j];
            }
            averageCollection.add(sum/array[i].length);
        }
        System.out.println("The min value is of average at index: "+averageCollection.indexOf(Collections.min(averageCollection)));
        return array[averageCollection.indexOf(Collections.min(averageCollection))];
    }

    }

